IMPLEMENTATION RulerOfTheSeas_i

REFINES RulerOfTheSeas

CONCRETE_VARIABLES
    players_i, player_coins_i, player_islands_i,
    available_islands_i, turn_completed_i, game_state_i,
    island_happiness_i, winner_i, player_count,
    available_islands_count, turn_completed_count

INVARIANT
    players_i : PLAYER --> BOOL &
    players = dom(players_i |> {TRUE}) &
    
    player_count : NAT &
    player_count <= MAX_PLAYERS &
    
    player_coins_i : PLAYER --> NAT &
    player_coins = players <| player_coins_i & 
    
    player_islands_i : PLAYER * ISLAND --> BOOL &
    
    island_happiness_i : ISLAND --> (0..MAX_HAPPINESS) &
    island_happiness = island_happiness_i &

    available_islands_i : ISLAND --> BOOL &
    available_islands = dom(available_islands_i |> {TRUE}) &
    available_islands_count : NAT &
    available_islands_count <= MAX_ISLANDS &
    
    game_state_i : GAME_STATE &
    game_state = game_state_i &
    
    turn_completed_i : PLAYER --> BOOL &
    turn_completed = dom(turn_completed_i |> {TRUE}) &
    turn_completed_count : NAT &
    turn_completed_count <= player_count &

    winner_i : PLAYER --> BOOL &
    winner = dom(winner_i |> {TRUE})

VALUES
    PLAYER = 0..3;
    ISLAND = 0..11;
    MAX_ISLANDS = 12;
    MAX_PLAYERS = 4; 
    MIN_PLAYERS = 2;
    MAX_HAPPINESS = 100;
    HAPPINESS_FEE = 20;
    ISLAND_HAPPINESS_ACQUIRED = 50;
    ATTACK_SUCCESS_HAPPINESS = 80;
    ATTACK_FAIL_HAPPINESS = 20

INITIALISATION
    players_i := PLAYER * {FALSE};
    player_count := 0;
    turn_completed_count := 0;
    island_happiness_i := ISLAND * {MAX_HAPPINESS};
    player_coins_i := PLAYER * {0};
    available_islands_i := ISLAND * {TRUE};
    available_islands_count := MAX_ISLANDS;
    turn_completed_i := PLAYER * {FALSE};
    player_islands_i := PLAYER * ISLAND * {FALSE};
    game_state_i := CONFIGURING;
    winner_i := PLAYER * {FALSE}

OPERATIONS
    AddPlayer(pp) =
        BEGIN
            VAR is_player_in IN
                is_player_in := players_i(pp);
                IF player_count < MAX_PLAYERS & is_player_in = FALSE & game_state_i = CONFIGURING
                THEN
                    players_i(pp) := TRUE;
                    player_coins_i(pp) := 2;
                    player_count := player_count + 1;
                    VAR ii_index, found IN
                        ii_index := 0;
                        found := FALSE;
                        WHILE ii_index <= MAX_ISLANDS & found = FALSE DO
                            VAR is_available_island IN
                                is_available_island := available_islands_i(ii_index);
                                IF is_available_island = TRUE THEN
                                    player_islands_i(pp, ii_index) := TRUE;
                                    available_islands_i(ii_index) := FALSE;
                                    found := TRUE
                                ELSE
                                    ii_index := ii_index + 1
                                END
                             END
                        INVARIANT
                            ii_index : 0..MAX_ISLANDS  &
                            available_islands_i(ii_index) = TRUE &
                            found = FALSE => player_islands_i(pp, ii_index) = FALSE
                        VARIANT
                            MAX_ISLANDS - ii_index + 1
                        END
                    END 
                END
             END
        END;
        
    StartGame = 
        BEGIN
            IF player_count >= MIN_PLAYERS & player_count <= MAX_PLAYERS & game_state_i = CONFIGURING
            THEN
                game_state_i := PLAYING
            END   
        END;
    
    AcquireIsland(pp) =
        BEGIN
            VAR player_turn_not_completed, player_current_coins IN
                player_turn_not_completed := turn_completed_i(pp);
                player_current_coins := player_coins_i(pp);
                IF player_turn_not_completed = FALSE & available_islands_count > 0 & player_current_coins >= 3 & game_state_i = PLAYING
                THEN
                    player_coins_i(pp) := player_coins_i(pp) - 3;
                    VAR ii_index, found IN
                        ii_index := 0;
                        found := FALSE;
                        WHILE ii_index <= MAX_ISLANDS & found = FALSE DO
                            VAR is_available_island IN
                                is_available_island := available_islands_i(ii_index);
                                IF is_available_island = TRUE THEN
                                    player_islands_i(pp, ii_index) := TRUE;
                                    available_islands_i(ii_index) := FALSE;
                                    island_happiness_i(ii_index) := ISLAND_HAPPINESS_ACQUIRED;
                                    found := TRUE
                                ELSE
                                    ii_index := ii_index + 1
                                END
                            END
                        INVARIANT
                            ii_index : 0..MAX_ISLANDS  &
                            available_islands_i(ii_index) = TRUE &
                            found = FALSE => player_islands_i(pp, ii_index) = FALSE
                        VARIANT
                            MAX_ISLANDS - ii_index + 1
                        END
                    END;
                    turn_completed_i(pp) := TRUE;
                    turn_completed_count := turn_completed_count + 1
                END
            END
        END;
    
    InvestOnResources(pp) =
        BEGIN
            VAR player_turn_not_completed IN
                player_turn_not_completed := turn_completed_i(pp);
                IF player_turn_not_completed = FALSE & game_state_i = PLAYING
                THEN
                    VAR ii IN
                        ii := 0;
                        WHILE ii < MAX_ISLANDS DO
                            VAR is_player_island IN
                                is_player_island := player_islands_i(pp, ii);
                                IF is_player_island = TRUE
                                THEN
                                    player_coins_i(pp) := player_coins_i(pp) + 1;
                                    VAR island_happiness_value, happiness_minus_fee IN
                                        island_happiness_value := island_happiness_i(ii);
                                        happiness_minus_fee := island_happiness_value - HAPPINESS_FEE;
                                        IF happiness_minus_fee <= 0
                                        THEN
                                            player_islands_i(pp, ii) := FALSE;
                                            available_islands_i(ii) := TRUE
                                        ELSE
                                            island_happiness_i(ii) := happiness_minus_fee
                                        END
                                    END
                                END
                            END
                        INVARIANT
                            ii : NAT & ii <= MAX_ISLANDS &
                            pp : PLAYER & ii : 1..MAX_ISLANDS &
                            { pi | pi : 1..MAX_ISLANDS & player_islands_i(pp, pi) = TRUE } = player_islands(pp)
                        VARIANT
                            MAX_ISLANDS - ii + 1
                        END
                    END;
                    turn_completed_i(pp) := TRUE
                END
            END
        END;

    InvestOnHappiness(pp) = skip;

    AttackPlayer(attacker, victim, dice_attacker, dice_victim) = skip;
    
    NextTurn = skip;
        /*BEGIN
            IF game_state_i = PLAYING & player_count = turn_completed_count
            THEN
                VAR pp IN
                    pp := 0;
                    turn_completed_count := 0;
                    IF player_count = 1
                    THEN
                        VAR winner_found IN
                            winner_found := FALSE;
                            WHILE pp < MAX_PLAYERS & winner_found = FALSE DO
                                VAR player_is_winner IN
                                    player_is_winner := player_islands_i(pp);
                                    IF player_is_winner = TRUE THEN
                                        winner_i(pp) := TRUE;
                                        winner_found := TRUE
                                    ELSE
                                        pp := pp + 1
                                    END
                                END
                            INVARIANT
                                pp : 0..MAX_PLAYERS &
                                winner_found = FALSE => winner_i(pp) = FALSE
                            VARIANT
                                MAX_PLAYERS - pp + 1
                            END
                        END
                    ELSE
                    WHILE pp < MAX_PLAYERS DO
                        turn_completed_i(pp) := FALSE;
                        player_coins_i(pp) := player_coins_i(pp) + 1;
                        pp := pp + 1
                    END
                END
            END 
        END;*/

    StartNewGame = skip
   
    /*query_players <-- GetPlayers = skip;
    query_player_coins <-- GetPlayerCoins(pp) = skip;
    GetPlayerIslands(pp) = skip;
    GetIslandHappiness(ii) = skip;
    GetAvailableIslands = skip;
    GetGameState = skip;
    GetTurnCompleted = skip;
    GetWinner = skip;
    GetPlayerIslandsHappiness(pp) = skip*/
END